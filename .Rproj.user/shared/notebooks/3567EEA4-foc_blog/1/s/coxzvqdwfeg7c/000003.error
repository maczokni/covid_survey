{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"data %>% mutate(fearcovid_reka = case_when(b_foc == \"No\" ~ \"Unworried\", \n    b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \"A little\") & \n        b_prec == \"No\" | b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \n        \"A little\") & b_prec == \"Yes\" & b_precqof %in% c(\"Not at all\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(function_list[[k]](value))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[k]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate(., fearcovid_reka = case_when(b_foc == \"No\" ~ \"Unworried\", \n    b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \"A little\") & \n        b_prec == \"No\" | b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \n        \"A little\") & b_prec == \"Yes\" & b_precqof %in% c(\"Not at all\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate.tbl_df(., fearcovid_reka = case_when(b_foc == \"No\" ~ \"Unworried\", \n    b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \"A little\") & \n        b_prec == \"No\" | b_foc == \"Yes\" & b_focqol %in% c(\"Not at all\", \n        \"A little\") & b_prec == \"Yes\" & b_precqof %in% c(\"Not at all\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mutate_impl(.data, dots, caller_env())","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"case_when(b_foc == \"No\" ~ \"Unworried\", b_foc == \"Yes\" & b_focqol %in% \n    c(\"Not at all\", \"A little\") & b_prec == \"No\" | b_foc == \"Yes\" & \n    b_focqol %in% c(\"Not at all\", \"A little\") & b_prec == \"Yes\" & \n    b_precqof %in% c(\"Not at all\", \"A little\") ~ \"Functional\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"map2(fs, seq_along(fs), validate_formula, default_env, current_env())","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mapply(.f, .x, .y, MoreArgs = list(...), SIMPLIFY = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (x, i, default_env, dots_env) \n{\n    if (is_quosure(x)) {\n        default_env <- quo_get_env(x) ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"abort_case_when_formula(arg, i, x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"abort(glue(\"Case {i} ({deparsed}) must be a two-sided formula, not {type}\"))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(fallback)","line_number":0}],"message":"Error: Case 3 (`b_foc == \"No\" ~ \"Unworried\"`) must be a two-sided formula, not a logical vector\n"}